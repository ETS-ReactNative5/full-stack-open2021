{"ast":null,"code":"var _jsxFileName = \"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/components/Blog.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Blog = _ref => {\n  _s();\n\n  let {\n    blog,\n    updateLike,\n    user,\n    deleteBlogPost\n  } = _ref;\n  let token_decoded;\n\n  if (user) {\n    token_decoded = jwt_decode(user.token);\n  } else {\n    token_decoded = null;\n  }\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  };\n  const [view, setView] = useState(false);\n  const hideShow = {\n    display: view ? '' : 'none'\n  };\n\n  const toggleView = () => {\n    setView(!view);\n  };\n\n  const updateBlogLike = event => {\n    event.preventDefault();\n    updateLike({\n      user: user ? token_decoded.id : null,\n      likes: blog.likes + 1,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url\n    }, blog.id);\n  };\n\n  const deletePost = event => {\n    event.preventDefault();\n\n    if (window.confirm(`Remove Blog ${blog.title} by ${blog.author}?`)) {\n      const token_decoded = jwt_decode(user.token);\n      console.log(token_decoded);\n      deleteBlogPost(blog.id, token_decoded);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: blogStyle,\n      className: \"blog\",\n      children: [blog.title, \" \", blog.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Blog, \"1AUQlsBdUV4J85jsdRUsiHhgDRM=\");\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/components/Blog.js"],"names":["React","useState","jwt_decode","Blog","blog","updateLike","user","deleteBlogPost","token_decoded","token","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","view","setView","hideShow","display","toggleView","updateBlogLike","event","preventDefault","id","likes","author","title","url","deletePost","window","confirm","console","log"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;;AAEA,MAAMC,IAAI,GAAG,QAAgD;AAAA;;AAAA,MAA/C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA;AAA1B,GAA+C;AAC3D,MAAIC,aAAJ;;AACA,MAAIF,IAAJ,EAAU;AACRE,IAAAA,aAAa,GAAGN,UAAU,CAACI,IAAI,CAACG,KAAN,CAA1B;AACD,GAFD,MAEO;AACLD,IAAAA,aAAa,GAAG,IAAhB;AACD;;AACD,QAAME,SAAS,GAAG;AAChBC,IAAAA,UAAU,EAAE,EADI;AAEhBC,IAAAA,WAAW,EAAE,CAFG;AAGhBC,IAAAA,MAAM,EAAE,OAHQ;AAIhBC,IAAAA,WAAW,EAAE,CAJG;AAKhBC,IAAAA,YAAY,EAAE;AALE,GAAlB;AAOA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMiB,QAAQ,GAAG;AACfC,IAAAA,OAAO,EAAEH,IAAI,GAAG,EAAH,GAAQ;AADN,GAAjB;;AAIA,QAAMI,UAAU,GAAG,MAAM;AACvBH,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAIA,QAAMK,cAAc,GAAIC,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAlB,IAAAA,UAAU,CAAC;AACTC,MAAAA,IAAI,EAAEA,IAAI,GAAGE,aAAa,CAACgB,EAAjB,GAAsB,IADvB;AAETC,MAAAA,KAAK,EAAErB,IAAI,CAACqB,KAAL,GAAa,CAFX;AAGTC,MAAAA,MAAM,EAAEtB,IAAI,CAACsB,MAHJ;AAITC,MAAAA,KAAK,EAAEvB,IAAI,CAACuB,KAJH;AAKTC,MAAAA,GAAG,EAAExB,IAAI,CAACwB;AALD,KAAD,EAMPxB,IAAI,CAACoB,EANE,CAAV;AAOD,GATD;;AAWA,QAAMK,UAAU,GAAIP,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIO,MAAM,CAACC,OAAP,CAAgB,eAAc3B,IAAI,CAACuB,KAAM,OAAMvB,IAAI,CAACsB,MAAO,GAA3D,CAAJ,EAAoE;AAClE,YAAMlB,aAAa,GAAGN,UAAU,CAACI,IAAI,CAACG,KAAN,CAAhC;AACAuB,MAAAA,OAAO,CAACC,GAAR,CAAYzB,aAAZ;AACAD,MAAAA,cAAc,CAACH,IAAI,CAACoB,EAAN,EAAUhB,aAAV,CAAd;AACD;AACF,GAPD;;AASA,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAEE,SAAZ;AAAuB,MAAA,SAAS,EAAC,MAAjC;AAAA,iBACGN,IAAI,CAACuB,KADR,OACgBvB,IAAI,CAACsB,MADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CAlDD;;GAAMvB,I;;KAAAA,I;AAqDN,eAAeA,IAAf","sourcesContent":["import { React, useState } from 'react'\nimport jwt_decode from 'jwt-decode'\n\nconst Blog = ({ blog, updateLike, user, deleteBlogPost }) => {\n  let token_decoded\n  if (user) {\n    token_decoded = jwt_decode(user.token)\n  } else {\n    token_decoded = null\n  }\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n  const [view, setView] = useState(false)\n  const hideShow = {\n    display: view ? '' : 'none'\n  }\n\n  const toggleView = () => {\n    setView(!view)\n  }\n\n  const updateBlogLike = (event) => {\n    event.preventDefault()\n    updateLike({\n      user: user ? token_decoded.id : null,\n      likes: blog.likes + 1,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url,\n    }, blog.id)\n  }\n\n  const deletePost = (event) => {\n    event.preventDefault()\n    if (window.confirm(`Remove Blog ${blog.title} by ${blog.author}?`)) {\n      const token_decoded = jwt_decode(user.token)\n      console.log(token_decoded)\n      deleteBlogPost(blog.id, token_decoded)\n    }\n  }\n\n  return (\n    <>\n      <div style={blogStyle} className='blog'>\n        {blog.title} {blog.author}\n      </div>\n    </>\n  )\n}\n\n\nexport default Blog"]},"metadata":{},"sourceType":"module"}