{"ast":null,"code":"var _jsxFileName = \"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // SERVICES\n\nimport blogService from '../services/blogs'; // REDUCERS\n\nimport { addBlog, initializeBlogs } from '../reducers/blogsReducer';\nimport { timedValid } from '../reducers/validReducer'; // COMPONENTS\n\nimport BlogList from './BlogList';\nimport CreateForm from './CreateForm';\nimport Togglable from './Togglable';\nimport ValidMessage from './ValidMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Blogs = () => {\n  _s();\n\n  const blogFormRef = useRef();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n\n  if (!user) {\n    return null;\n  } // BLOG FUNCTIONALITIES\n\n\n  const createBlog = async blogObject => {\n    const response = await blogService.createBlogEntry(blogObject);\n    dispatch(addBlog(response));\n    dispatch(timedValid(`A new blog ${blogObject.title} ${blogObject.author} added`));\n    dispatch(initializeBlogs());\n    blogFormRef.current.toggleVisibility();\n  };\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    });\n    dispatch(initializeBlogs());\n    dispatch(timedValid('The blog entry has been deleted'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ValidMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"Create new blog\",\n      ref: blogFormRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"create new\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CreateForm, {\n        createBlog: createBlog,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(BlogList, {\n      updateLike: updateBlogLikes,\n      user: user,\n      deleteBlogPost: deleteBlogPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Blogs, \"qqjc9JwPEvIsDtQEgzxPNvdkH6Q=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Blogs;\nexport default Blogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"sources":["/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/components/Home.js"],"names":["React","useRef","useDispatch","useSelector","blogService","addBlog","initializeBlogs","timedValid","BlogList","CreateForm","Togglable","ValidMessage","Blogs","blogFormRef","dispatch","user","state","createBlog","blogObject","response","createBlogEntry","title","author","current","toggleVisibility","deleteBlogPost","id","deleteBlog","updateBlogLikes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,mBAAxB,C,CAEA;;AACA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,0BAAzC;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,WAAW,GAAGZ,MAAM,EAA1B;AACA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,IAAI,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;;AAEA,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,IAAP;AACD,GAPiB,CASlB;;;AAEA,QAAME,UAAU,GAAG,MAAOC,UAAP,IAAsB;AACvC,UAAMC,QAAQ,GAAG,MAAMf,WAAW,CAACgB,eAAZ,CAA4BF,UAA5B,CAAvB;AACAJ,IAAAA,QAAQ,CAACT,OAAO,CAACc,QAAD,CAAR,CAAR;AACAL,IAAAA,QAAQ,CAACP,UAAU,CAAE,cAAaW,UAAU,CAACG,KAAM,IAAGH,UAAU,CAACI,MAAO,QAArD,CAAX,CAAR;AACAR,IAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;AACAO,IAAAA,WAAW,CAACU,OAAZ,CAAoBC,gBAApB;AACD,GAND;;AAQA,QAAMC,cAAc,GAAG,OAAOC,EAAP,EAAWX,IAAX,KAAoB;AACzC,UAAMX,WAAW,CAACuB,UAAZ,CAAuB;AAC3BD,MAAAA,EAAE,EAAEA,EADuB;AAE3BX,MAAAA,IAAI,EAAEA;AAFqB,KAAvB,CAAN;AAIAD,IAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;AACAQ,IAAAA,QAAQ,CAACP,UAAU,CAAC,iCAAD,CAAX,CAAR;AACD,GAPD;;AASA,sBACI;AAAA,4BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,SAAD;AAAW,MAAA,WAAW,EAAC,iBAAvB;AAAyC,MAAA,GAAG,EAAEM,WAA9C;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEI,UAAxB;AAAoC,QAAA,IAAI,EAAEF;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAQI,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEa,eAAtB;AAAuC,MAAA,IAAI,EAAEb,IAA7C;AAAmD,MAAA,cAAc,EAAEU;AAAnE;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYD,CAxCD;;GAAMb,K;UAEaV,W,EACJC,W;;;KAHTS,K;AA0CN,eAAeA,KAAf","sourcesContent":["import React, { useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// SERVICES\nimport blogService from '../services/blogs'\n\n// REDUCERS\nimport { addBlog, initializeBlogs } from '../reducers/blogsReducer'\nimport { timedValid } from '../reducers/validReducer'\n\n// COMPONENTS\nimport BlogList from './BlogList'\nimport CreateForm from './CreateForm'\nimport Togglable from './Togglable'\nimport ValidMessage from './ValidMessage'\n\nconst Blogs = () => {\n  const blogFormRef = useRef()\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n\n  if (!user) {\n    return null\n  }\n\n  // BLOG FUNCTIONALITIES\n\n  const createBlog = async (blogObject) => {\n    const response = await blogService.createBlogEntry(blogObject)\n    dispatch(addBlog(response))\n    dispatch(timedValid(`A new blog ${blogObject.title} ${blogObject.author} added`))\n    dispatch(initializeBlogs())\n    blogFormRef.current.toggleVisibility()\n  }\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    })\n    dispatch(initializeBlogs())\n    dispatch(timedValid('The blog entry has been deleted'))\n  }\n\n  return (\n      <div>\n          <ValidMessage/>\n          <h2>blogs</h2>\n          <Togglable buttonLabel='Create new blog' ref={blogFormRef}>\n            <h2>create new</h2>\n            <CreateForm createBlog={createBlog} user={user}/>\n          </Togglable>\n          \n          <BlogList updateLike={updateBlogLikes} user={user} deleteBlogPost={deleteBlogPost}/>\n      </div>\n  )\n}\n\nexport default Blogs"]},"metadata":{},"sourceType":"module"}