{"ast":null,"code":"var _jsxFileName = \"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // SERVICES\n\nimport blogService from '../services/blogs';\nimport loginService from '../services/login'; // REDUCERS\n\nimport { setTheUser } from '../reducers/userReducer';\nimport { addBlog, initializeBlogs } from '../reducers/blogsReducer';\nimport { timedValid } from '../reducers/validReducer'; // COMPONENTS\n\nimport BlogList from './BlogList';\nimport CreateForm from './CreateForm';\nimport Togglable from './Togglable';\nimport ValidMessage from './ValidMessage';\nimport ErrorMessage from './ErrorMessage';\nimport LoginForm from './LoginForm';\nimport { timedError } from '../reducers/errorReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Blogs = () => {\n  _s();\n\n  const blogFormRef = useRef();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState(''); // LOGIN FUNCTIONALITIES\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      console.log(user);\n      blogService.setToken(user.token);\n      dispatch(setTheUser(user));\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      dispatch(timedError('Wrong Credentials'));\n      setUsername('');\n      setPassword('');\n    }\n  };\n\n  const clearLocStor = event => {\n    event.preventDefault();\n    window.localStorage.clear();\n    dispatch(setTheUser(null));\n  }; // BLOG FUNCTIONALITIES\n\n\n  const createBlog = async blogObject => {\n    const response = await blogService.createBlogEntry(blogObject);\n    dispatch(addBlog(response));\n    dispatch(timedValid(`A new blog ${blogObject.title} ${blogObject.author} added`));\n    dispatch(initializeBlogs());\n    blogFormRef.current.toggleVisibility();\n  };\n\n  const updateBlogLikes = async (blogPost, id) => {\n    await blogService.updateLike(blogPost, id);\n    dispatch(initializeBlogs());\n  };\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    });\n    dispatch(initializeBlogs());\n    dispatch(timedValid('The blog entry has been deleted'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      handleLogin: handleLogin,\n      username: username,\n      setUsername: setUsername,\n      password: password,\n      setPassword: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ValidMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.name, \" logged in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearLocStor,\n          children: \"log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"Create new blog\",\n        ref: blogFormRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"create new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CreateForm, {\n          createBlog: createBlog,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(BlogList, {\n        updateLike: updateBlogLikes,\n        user: user,\n        deleteBlogPost: deleteBlogPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Blogs, \"Nb4gu9O7AmD8qRd1YOWmYfz5DIc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Blogs;\nexport default Blogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"sources":["/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/components/Home.js"],"names":["React","useRef","useState","useDispatch","useSelector","blogService","loginService","setTheUser","addBlog","initializeBlogs","timedValid","BlogList","CreateForm","Togglable","ValidMessage","ErrorMessage","LoginForm","timedError","Blogs","blogFormRef","dispatch","user","state","username","setUsername","password","setPassword","handleLogin","event","preventDefault","login","window","localStorage","setItem","JSON","stringify","console","log","setToken","token","exception","clearLocStor","clear","createBlog","blogObject","response","createBlogEntry","title","author","current","toggleVisibility","updateBlogLikes","blogPost","id","updateLike","deleteBlogPost","deleteBlog","name"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// SERVICES\nimport blogService from '../services/blogs'\nimport loginService from '../services/login'\n\n// REDUCERS\nimport { setTheUser } from '../reducers/userReducer'\nimport { addBlog, initializeBlogs } from '../reducers/blogsReducer'\nimport { timedValid } from '../reducers/validReducer'\n\n// COMPONENTS\nimport BlogList from './BlogList'\nimport CreateForm from './CreateForm'\nimport Togglable from './Togglable'\nimport ValidMessage from './ValidMessage'\nimport ErrorMessage from './ErrorMessage'\nimport LoginForm from './LoginForm'\nimport { timedError } from '../reducers/errorReducer'\n\nconst Blogs = () => {\n  const blogFormRef = useRef()\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  // LOGIN FUNCTIONALITIES\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      console.log(user);\n      blogService.setToken(user.token)\n      dispatch(setTheUser(user))\n      setUsername('')\n      setPassword('')\n\n    } catch (exception) {\n      dispatch(timedError('Wrong Credentials'))\n      setUsername('')\n      setPassword('')\n    }\n  }\n\n  const clearLocStor = (event) => {\n    event.preventDefault()\n    window.localStorage.clear()\n    dispatch(setTheUser(null))\n  }\n\n  // BLOG FUNCTIONALITIES\n\n  const createBlog = async (blogObject) => {\n    const response = await blogService.createBlogEntry(blogObject)\n    dispatch(addBlog(response))\n    dispatch(timedValid(`A new blog ${blogObject.title} ${blogObject.author} added`))\n    dispatch(initializeBlogs())\n    blogFormRef.current.toggleVisibility()\n  }\n\n  const updateBlogLikes = async (blogPost, id) => {\n    await blogService.updateLike(blogPost, id)\n    dispatch(initializeBlogs())\n  }\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    })\n    dispatch(initializeBlogs())\n    dispatch(timedValid('The blog entry has been deleted'))\n  }\n\n  return (\n    <div>\n    <ErrorMessage/>\n      {user === null\n        ? <LoginForm\n          handleLogin={handleLogin}\n          username={username}\n          setUsername={setUsername}\n          password={password}\n          setPassword={setPassword}\n        />\n        : \n          <div>\n              <ValidMessage/>\n              <div>\n                <p>{user.name} logged in</p>\n                <button onClick={clearLocStor}>log out</button>\n              </div>\n              <Togglable buttonLabel='Create new blog' ref={blogFormRef}>\n                <h2>create new</h2>\n                <CreateForm createBlog={createBlog} user={user}/>\n              </Togglable>\n              <h2>blogs</h2>\n              <BlogList updateLike={updateBlogLikes} user={user} deleteBlogPost={deleteBlogPost}/>\n            </div>\n      }\n    </div>\n  )\n}\n\nexport default Blogs"]},"metadata":{},"sourceType":"module"}