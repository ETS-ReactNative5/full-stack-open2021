{"ast":null,"code":"import _slicedToArray from\"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{React,useState,forwardRef,useImperativeHandle}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Togglable=/*#__PURE__*/forwardRef(function(props,ref){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var toggleVisibility=function toggleVisibility(){setVisible(!visible);};var hideWhenVisible={display:visible?'none':''};var showWhenVisible={display:visible?'':'none'};useImperativeHandle(ref,function(){return{toggleVisibility:toggleVisibility};});return/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"div\",{style:hideWhenVisible,children:/*#__PURE__*/_jsx(\"button\",{onClick:toggleVisibility,className:\"font-mono p-2 mb-6 w-40 rounded-md border-solid border-blue-400/30 hover:border-blue-400 hover:shadow-md hover:transition-all dark:text-white dark:bg-slate-900\",children:props.buttonLabel})}),/*#__PURE__*/_jsxs(\"div\",{style:showWhenVisible,children:[props.children,/*#__PURE__*/_jsx(\"button\",{onClick:toggleVisibility,className:\"font-mono text-slate-700 p-2 w-32 rounded-md border-solid border-blue-400/30 hover:border-blue-400 hover:shadow-md hover:transition-all dark:text-white dark:bg-slate-900 mb-6\",children:\"Cancel\"})]})]});});Togglable.displayName='Togglable';export default Togglable;","map":{"version":3,"sources":["/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/components/Togglable.js"],"names":["React","useState","forwardRef","useImperativeHandle","Togglable","props","ref","visible","setVisible","toggleVisibility","hideWhenVisible","display","showWhenVisible","buttonLabel","children","displayName"],"mappings":"yJAAA,OAASA,KAAT,CAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,mBAAtC,KAAiE,OAAjE,C,wFAGA,GAAMC,CAAAA,SAAS,cAAGF,UAAU,CAAC,SAACG,KAAD,CAAQC,GAAR,CAAgB,CAC3C,cAA8BL,QAAQ,CAAC,KAAD,CAAtC,wCAAOM,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7BD,UAAU,CAAC,CAACD,OAAF,CAAV,CACD,CAFD,CAGA,GAAMG,CAAAA,eAAe,CAAG,CAAEC,OAAO,CAAEJ,OAAO,CAAG,MAAH,CAAY,EAA9B,CAAxB,CACA,GAAMK,CAAAA,eAAe,CAAG,CACtBD,OAAO,CAAEJ,OAAO,CAAG,EAAH,CAAQ,MADF,CAAxB,CAIAJ,mBAAmB,CAACG,GAAD,CAAM,UAAM,CAC7B,MAAO,CACLG,gBAAgB,CAAhBA,gBADK,CAAP,CAGD,CAJkB,CAAnB,CAMA,mBACE,aAAK,SAAS,CAAC,MAAf,wBACE,YAAK,KAAK,CAAEC,eAAZ,uBACE,eAAQ,OAAO,CAAED,gBAAjB,CAAmC,SAAS,CAAC,iKAA7C,UAAgNJ,KAAK,CAACQ,WAAtN,EADF,EADF,cAIE,aAAK,KAAK,CAAED,eAAZ,WACGP,KAAK,CAACS,QADT,cAEE,eAAQ,OAAO,CAAEL,gBAAjB,CAAmC,SAAS,CAAC,gLAA7C,oBAFF,GAJF,GADF,CAWD,CA5B2B,CAA5B,CAkCAL,SAAS,CAACW,WAAV,CAAwB,WAAxB,CAEA,cAAeX,CAAAA,SAAf","sourcesContent":["import { React, useState, forwardRef, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = {\n    display: visible ? '' : 'none'\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div className='flex'>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility} className='font-mono p-2 mb-6 w-40 rounded-md border-solid border-blue-400/30 hover:border-blue-400 hover:shadow-md hover:transition-all dark:text-white dark:bg-slate-900'>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility} className='font-mono text-slate-700 p-2 w-32 rounded-md border-solid border-blue-400/30 hover:border-blue-400 hover:shadow-md hover:transition-all dark:text-white dark:bg-slate-900 mb-6'>Cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable"]},"metadata":{},"sourceType":"module"}