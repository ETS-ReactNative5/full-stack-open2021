{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = null;\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState,\n  reducers: {\n    setError(state, action) {\n      const newMessage = action.payload;\n      return newMessage;\n    },\n\n    clearEror(state, action) {\n      return nulla;\n    },\n\n    setValid(state, action) {\n      const newMessage = action.payload;\n      return newMessage;\n    }\n\n  }\n});\nexport const {\n  setError,\n  setValid,\n  clearError\n} = notificationSlice.actions;\nexport const timedError = message => {\n  return async dispatch => {\n    dispatch(setError(message));\n    setTimeout(() => {\n      dispatch(clearError());\n    }, 5000);\n  };\n};\nexport default notificationSlice.reducer;","map":{"version":3,"sources":["/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/reducers/notificationReducer.js"],"names":["createSlice","initialState","notificationSlice","name","reducers","setError","state","action","newMessage","payload","clearEror","nulla","setValid","clearError","actions","timedError","message","dispatch","setTimeout","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,IAArB;AAEA,MAAMC,iBAAiB,GAAGF,WAAW,CAAC;AACpCG,EAAAA,IAAI,EAAE,cAD8B;AAEpCF,EAAAA,YAFoC;AAGpCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACtB,YAAMC,UAAU,GAAGD,MAAM,CAACE,OAA1B;AACA,aAAOD,UAAP;AACD,KAJO;;AAKRE,IAAAA,SAAS,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACvB,aAAOI,KAAP;AACD,KAPO;;AAQRC,IAAAA,QAAQ,CAACN,KAAD,EAAQC,MAAR,EAAgB;AACtB,YAAMC,UAAU,GAAGD,MAAM,CAACE,OAA1B;AACA,aAAOD,UAAP;AACD;;AAXO;AAH0B,CAAD,CAArC;AAkBA,OAAO,MAAM;AAAEH,EAAAA,QAAF;AAAYO,EAAAA,QAAZ;AAAsBC,EAAAA;AAAtB,IAAqCX,iBAAiB,CAACY,OAA7D;AAEP,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAa;AACrC,SAAO,MAAMC,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CAACZ,QAAQ,CAACW,OAAD,CAAT,CAAR;AACAE,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALD;AAMD,CAPM;AASP,eAAeX,iBAAiB,CAACiB,OAAjC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = null\n\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState,\n  reducers: {\n    setError(state, action) {\n      const newMessage = action.payload\n      return newMessage\n    },\n    clearEror(state, action) {\n      return nulla\n    },\n    setValid(state, action) {\n      const newMessage = action.payload\n      return newMessage\n    }\n  }\n})\n\nexport const { setError, setValid, clearError } = notificationSlice.actions\n\nexport const timedError = (message) => {\n  return async dispatch => {\n    dispatch(setError(message))\n    setTimeout(() => {\n      dispatch(clearError())\n    }, 5000)\n  }\n}\n\nexport default notificationSlice.reducer"]},"metadata":{},"sourceType":"module"}