{"ast":null,"code":"var _jsxFileName = \"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport LoginForm from './components/LoginForm';\nimport ErrorMessage from './components/ErrorMessage';\nimport ValidMessage from './components/ValidMessage';\nimport CreateForm from './components/CreateForm';\nimport loginService from './services/login';\nimport blogService from './services/blogs';\nimport './index.css';\nimport BlogList from './components/BlogList';\nimport Togglable from './components/Togglable'; // Redux implementation\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addBlog, initializeBlogs } from './reducers/blogsReducer';\nimport { timedError } from './reducers/errorReducer';\nimport { timedValid } from './reducers/validReducer';\nimport { setTheUser } from './reducers/userReducer'; // Router Implementation\n\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const blogFormRef = useRef();\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      dispatch(setTheUser(user));\n    }\n  }, []);\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      console.log(user);\n      blogService.setToken(user.token);\n      dispatch(setTheUser(user));\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      dispatch(timedError('Wrong Credentials'));\n      setUsername('');\n      setPassword('');\n    } // add a dispatch to clear the state\n\n  };\n\n  const clearLocStor = event => {\n    event.preventDefault();\n    window.localStorage.clear();\n    dispatch(setTheUser(null));\n  };\n\n  const createBlog = async blogObject => {\n    const response = await blogService.createBlogEntry(blogObject);\n    dispatch(addBlog(response));\n    dispatch(timedValid(`A new blog ${blogObject.title} ${blogObject.author} added`));\n    dispatch(initializeBlogs());\n    blogFormRef.current.toggleVisibility();\n  };\n\n  const updateBlogLikes = async (blogPost, id) => {\n    await blogService.updateLike(blogPost, id);\n    dispatch(initializeBlogs());\n  };\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    });\n    dispatch(initializeBlogs());\n    dispatch(timedValid('The blog entry has been deleted'));\n  };\n\n  const user = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      handleLogin: handleLogin,\n      username: username,\n      setUsername: setUsername,\n      password: password,\n      setPassword: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ValidMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.name, \" logged in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearLocStor,\n          children: \"log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"Create new blog\",\n        ref: blogFormRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"create new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CreateForm, {\n          createBlog: createBlog,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BlogList, {\n        updateLike: updateBlogLikes,\n        user: user,\n        deleteBlogPost: deleteBlogPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"GQziucQEyEvXBZ3S36HJ07QaQsU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/App.js"],"names":["useState","useEffect","useRef","LoginForm","ErrorMessage","ValidMessage","CreateForm","loginService","blogService","BlogList","Togglable","useDispatch","useSelector","addBlog","initializeBlogs","timedError","timedValid","setTheUser","BrowserRouter","Router","Routes","Route","Link","App","dispatch","username","setUsername","password","setPassword","blogFormRef","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","handleLogin","event","preventDefault","login","setItem","stringify","console","log","setToken","token","exception","clearLocStor","clear","createBlog","blogObject","response","createBlogEntry","title","author","current","toggleVisibility","updateBlogLikes","blogPost","id","updateLike","deleteBlogPost","deleteBlog","state","name"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react'\nimport LoginForm from './components/LoginForm'\nimport ErrorMessage from './components/ErrorMessage'\nimport ValidMessage from './components/ValidMessage'\nimport CreateForm from './components/CreateForm'\nimport loginService from './services/login'\n\nimport blogService from './services/blogs'\nimport './index.css'\nimport BlogList from './components/BlogList'\nimport Togglable from './components/Togglable'\n\n// Redux implementation\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addBlog, initializeBlogs } from './reducers/blogsReducer'\nimport { timedError } from './reducers/errorReducer'\nimport { timedValid } from './reducers/validReducer'\nimport { setTheUser } from './reducers/userReducer'\n\n// Router Implementation\nimport {\n  BrowserRouter as Router,\n  Routes, Route, Link\n} from 'react-router-dom'\n\n\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const blogFormRef = useRef()\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setTheUser(user))\n    }\n  }, [])\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      console.log(user);\n      blogService.setToken(user.token)\n      dispatch(setTheUser(user))\n      setUsername('')\n      setPassword('')\n\n    } catch (exception) {\n      dispatch(timedError('Wrong Credentials'))\n      setUsername('')\n      setPassword('')\n    }\n    // add a dispatch to clear the state\n  }\n\n  const clearLocStor = (event) => {\n    event.preventDefault()\n    window.localStorage.clear()\n    dispatch(setTheUser(null))\n  }\n\n  const createBlog = async (blogObject) => {\n    const response = await blogService.createBlogEntry(blogObject)\n    dispatch(addBlog(response))\n    dispatch(timedValid(`A new blog ${blogObject.title} ${blogObject.author} added`))\n    dispatch(initializeBlogs())\n    blogFormRef.current.toggleVisibility()\n  }\n\n  const updateBlogLikes = async (blogPost, id) => {\n    await blogService.updateLike(blogPost, id)\n    dispatch(initializeBlogs())\n  }\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    })\n    dispatch(initializeBlogs())\n    dispatch(timedValid('The blog entry has been deleted'))\n  }\n\n  const user = useSelector(state => state.user)\n\n  return (\n    <div>\n      <ErrorMessage/>\n      {user === null\n        ? <LoginForm\n          handleLogin={handleLogin}\n          username={username}\n          setUsername={setUsername}\n          password={password}\n          setPassword={setPassword}\n        />\n        : <div>\n          <ValidMessage/>\n          <div>\n            <p>{user.name} logged in</p>\n            <button onClick={clearLocStor}>log out</button>\n          </div>\n          <Togglable buttonLabel='Create new blog' ref={blogFormRef}>\n            <h2>create new</h2>\n            <CreateForm createBlog={createBlog} user={user}/>\n          </Togglable>\n          <h2>blogs</h2>\n          <BlogList updateLike={updateBlogLikes} user={user} deleteBlogPost={deleteBlogPost}/>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}