{"ast":null,"code":"import _asyncToGenerator from\"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/node_modules/@babel/runtime/regenerator/index.js\";import{createSlice}from'@reduxjs/toolkit';import blogService from'../services/blogs';import{timedValid}from'./validReducer';var initialState=[];var blogSlice=createSlice({name:'blogs',initialState:initialState,reducers:{setBlogs:function setBlogs(state,action){return action.payload;},addBlog:function addBlog(state,action){var newState=[].concat(_toConsumableArray(state),[action.payload]);return newState;}}});var _blogSlice$actions=blogSlice.actions,setBlogs=_blogSlice$actions.setBlogs,addBlog=_blogSlice$actions.addBlog;export{setBlogs,addBlog};export var initializeBlogs=function initializeBlogs(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var blogs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return blogService.getAll();case 2:blogs=_context.sent;dispatch(setBlogs(blogs));case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var updateBlogLike=function updateBlogLike(blogPost,id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return blogService.updateLike(blogPost,id);case 2:dispatch(initializeBlogs());case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var deleteBlogPost=function deleteBlogPost(id,user){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return blogService.deleteBlog({id:id,user:user});case 2:dispatch(initializeBlogs());dispatch(timedValid('The blog entry has been deleted'));case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var addAComment=function addAComment(post,id){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return blogService.addComment(post,id);case 2:dispatch(initializeBlogs());dispatch(timedValid('The comment has been added!'));case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export default blogSlice.reducer;","map":{"version":3,"sources":["/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/reducers/blogsReducer.js"],"names":["createSlice","blogService","timedValid","initialState","blogSlice","name","reducers","setBlogs","state","action","payload","addBlog","newState","actions","initializeBlogs","dispatch","getAll","blogs","updateBlogLike","blogPost","id","updateLike","deleteBlogPost","user","deleteBlog","addAComment","post","addComment","reducer"],"mappings":"sdAAA,OAASA,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,OAASC,UAAT,KAA2B,gBAA3B,CAEA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CAEA,GAAMC,CAAAA,SAAS,CAAGJ,WAAW,CAAC,CAC5BK,IAAI,CAAE,OADsB,CAE5BF,YAAY,CAAZA,YAF4B,CAG5BG,QAAQ,CAAE,CACRC,QADQ,mBACCC,KADD,CACQC,MADR,CACgB,CACtB,MAAOA,CAAAA,MAAM,CAACC,OAAd,CACD,CAHO,CAIRC,OAJQ,kBAIAH,KAJA,CAIOC,MAJP,CAIe,CACrB,GAAMG,CAAAA,QAAQ,8BAAOJ,KAAP,GAAcC,MAAM,CAACC,OAArB,EAAd,CACA,MAAOE,CAAAA,QAAP,CACD,CAPO,CAHkB,CAAD,CAA7B,CAcO,uBAA8BR,SAAS,CAACS,OAAxC,CAAQN,QAAR,oBAAQA,QAAR,CAAkBI,OAAlB,oBAAkBA,OAAlB,C,yBAEP,MAAO,IAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACnC,+FAAO,iBAAMC,QAAN,kJACed,CAAAA,WAAW,CAACe,MAAZ,EADf,QACCC,KADD,eAELF,QAAQ,CAACR,QAAQ,CAACU,KAAD,CAAT,CAAR,CAFK,sDAAP,+DAID,CALM,CAOP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,QAAD,CAAWC,EAAX,CAAkB,CAC9C,gGAAO,kBAAML,QAAN,6IACCd,CAAAA,WAAW,CAACoB,UAAZ,CAAuBF,QAAvB,CAAiCC,EAAjC,CADD,QAELL,QAAQ,CAACD,eAAe,EAAhB,CAAR,CAFK,wDAAP,iEAID,CALM,CAOP,MAAO,IAAMQ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,EAAD,CAAKG,IAAL,CAAc,CACxC,gGAAO,kBAAMR,QAAN,6IACCd,CAAAA,WAAW,CAACuB,UAAZ,CAAuB,CAC7BJ,EAAE,CAAEA,EADyB,CAE7BG,IAAI,CAAEA,IAFuB,CAAvB,CADD,QAKPR,QAAQ,CAACD,eAAe,EAAhB,CAAR,CACAC,QAAQ,CAACb,UAAU,CAAC,iCAAD,CAAX,CAAR,CANO,wDAAP,iEAQH,CATM,CAWP,MAAO,IAAMuB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAON,EAAP,CAAc,CACvC,gGAAO,kBAAML,QAAN,6IACCd,CAAAA,WAAW,CAAC0B,UAAZ,CAAuBD,IAAvB,CAA6BN,EAA7B,CADD,QAELL,QAAQ,CAACD,eAAe,EAAhB,CAAR,CACAC,QAAQ,CAACb,UAAU,CAAC,6BAAD,CAAX,CAAR,CAHK,wDAAP,iEAKD,CANM,CAQP,cAAeE,CAAAA,SAAS,CAACwB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport blogService from '../services/blogs'\nimport { timedValid } from './validReducer'\n\nconst initialState = []\n\nconst blogSlice = createSlice({\n  name: 'blogs',\n  initialState,\n  reducers: {\n    setBlogs(state, action) {\n      return action.payload\n    },\n    addBlog(state, action) {\n      const newState = [...state, action.payload]\n      return newState\n    }\n  }\n})\n\nexport const { setBlogs, addBlog } = blogSlice.actions\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch(setBlogs(blogs))\n  }\n}\n\nexport const updateBlogLike = (blogPost, id) => {\n  return async dispatch => {\n    await blogService.updateLike(blogPost, id)\n    dispatch(initializeBlogs())\n  }\n}\n\nexport const deleteBlogPost = (id, user) => {\n    return async dispatch => {\n      await blogService.deleteBlog({\n      id: id,\n      user: user\n    })\n    dispatch(initializeBlogs())\n    dispatch(timedValid('The blog entry has been deleted'))\n  }\n}\n\nexport const addAComment = (post, id) => {\n  return async dispatch => {\n    await blogService.addComment(post, id)\n    dispatch(initializeBlogs())\n    dispatch(timedValid('The comment has been added!'))\n  }\n}\n\nexport default blogSlice.reducer"]},"metadata":{},"sourceType":"module"}