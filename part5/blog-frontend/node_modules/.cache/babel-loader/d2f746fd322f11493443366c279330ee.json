{"ast":null,"code":"var _jsxFileName = \"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './index.css'; // SERVICES\n\nimport loginService from './services/login';\nimport blogService from './services/blogs'; // COMPONENTS\n\nimport LoginForm from './components/LoginForm';\nimport ErrorMessage from './components/ErrorMessage';\nimport Blogs from './components/Blogs';\nimport Users from './components/Users'; // Redux implementation\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addBlog, initializeBlogs } from './reducers/blogsReducer';\nimport { timedError } from './reducers/errorReducer';\nimport { timedValid } from './reducers/validReducer';\nimport { setTheUser } from './reducers/userReducer'; // Router Implementation\n\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      dispatch(setTheUser(user));\n    }\n  }, []);\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      console.log(user);\n      blogService.setToken(user.token);\n      dispatch(setTheUser(user));\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      dispatch(timedError('Wrong Credentials'));\n      setUsername('');\n      setPassword('');\n    }\n  };\n\n  const createBlog = async blogObject => {\n    const response = await blogService.createBlogEntry(blogObject);\n    dispatch(addBlog(response));\n    dispatch(timedValid(`A new blog ${blogObject.title} ${blogObject.author} added`));\n    dispatch(initializeBlogs());\n    blogFormRef.current.toggleVisibility();\n  };\n\n  const updateBlogLikes = async (blogPost, id) => {\n    await blogService.updateLike(blogPost, id);\n    dispatch(initializeBlogs());\n  };\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    });\n    dispatch(initializeBlogs());\n    dispatch(timedValid('The blog entry has been deleted'));\n  };\n\n  const user = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Blogs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      handleLogin: handleLogin,\n      username: username,\n      setUsername: setUsername,\n      password: password,\n      setPassword: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Blogs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"aeJCeiMqbJLVd4tq3yesyEuBUMs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/App.js"],"names":["useState","useEffect","loginService","blogService","LoginForm","ErrorMessage","Blogs","Users","useDispatch","useSelector","addBlog","initializeBlogs","timedError","timedValid","setTheUser","BrowserRouter","Router","Routes","Route","Link","App","dispatch","username","setUsername","password","setPassword","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","handleLogin","event","preventDefault","login","setItem","stringify","console","log","setToken","token","exception","createBlog","blogObject","response","createBlogEntry","title","author","blogFormRef","current","toggleVisibility","updateBlogLikes","blogPost","id","updateLike","deleteBlogPost","deleteBlog","state"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport './index.css'\n\n// SERVICES\nimport loginService from './services/login'\nimport blogService from './services/blogs'\n\n// COMPONENTS\nimport LoginForm from './components/LoginForm'\nimport ErrorMessage from './components/ErrorMessage'\nimport Blogs from './components/Blogs'\nimport Users from './components/Users'\n\n// Redux implementation\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addBlog, initializeBlogs } from './reducers/blogsReducer'\nimport { timedError } from './reducers/errorReducer'\nimport { timedValid } from './reducers/validReducer'\nimport { setTheUser } from './reducers/userReducer'\n\n// Router Implementation\nimport {\n  BrowserRouter as Router,\n  Routes, Route, Link\n} from 'react-router-dom'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setTheUser(user))\n    }\n  }, [])\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      console.log(user);\n      blogService.setToken(user.token)\n      dispatch(setTheUser(user))\n      setUsername('')\n      setPassword('')\n\n    } catch (exception) {\n      dispatch(timedError('Wrong Credentials'))\n      setUsername('')\n      setPassword('')\n    }\n  }\n\n\n  const createBlog = async (blogObject) => {\n    const response = await blogService.createBlogEntry(blogObject)\n    dispatch(addBlog(response))\n    dispatch(timedValid(`A new blog ${blogObject.title} ${blogObject.author} added`))\n    dispatch(initializeBlogs())\n    blogFormRef.current.toggleVisibility()\n  }\n\n  const updateBlogLikes = async (blogPost, id) => {\n    await blogService.updateLike(blogPost, id)\n    dispatch(initializeBlogs())\n  }\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    })\n    dispatch(initializeBlogs())\n    dispatch(timedValid('The blog entry has been deleted'))\n  }\n\n  const user = useSelector(state => state.user)\n\n  return (\n    <div>\n      <Routes>\n        <Route path='/' element={<Blogs />} />\n      </Routes>\n      <ErrorMessage/>\n      {user === null\n        ? <LoginForm\n          handleLogin={handleLogin}\n          username={username}\n          setUsername={setUsername}\n          password={password}\n          setPassword={setPassword}\n        />\n        : <Blogs />\n      }\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}