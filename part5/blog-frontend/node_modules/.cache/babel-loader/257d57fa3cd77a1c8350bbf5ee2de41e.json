{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst createBlogEntry = async blogPost => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, blogPost, config);\n  return response.data;\n};\n\nconst updateLike = async (blogPost, id) => {\n  const response = await axios.put(`${baseUrl}/${id}`, blogPost);\n  return response.data;\n};\n\nconst getBlogsUser = async userId => {\n  const response = await axios.get(baseUrl);\n  console.log(response.data[16].user.id, userId); // const userBlogPosts = response.data.filter(blog => blog.user.id === userId)\n\n  const test = response.data.map(blog => {\n    console.log(blog);\n  });\n  return;\n}; // eslint-disable-next-line import/no-anonymous-default-export\n\n\nexport default {\n  getAll,\n  createBlogEntry,\n  setToken,\n  updateLike,\n  getBlogsUser\n};","map":{"version":3,"sources":["/Users/federico/Documents/Education/Full Stack Open/full-stack-open2021/part5/blog-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","response","get","data","createBlogEntry","blogPost","config","headers","Authorization","post","updateLike","id","put","getBlogsUser","userId","console","log","user","test","map","blog"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,YAAY;AACzB,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAvB;AACA,SAAOK,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMC,eAAe,GAAG,MAAOC,QAAP,IAAoB;AAC1C,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEX;AAAjB;AADI,GAAf;AAIA,QAAMI,QAAQ,GAAG,MAAMN,KAAK,CAACc,IAAN,CAAWb,OAAX,EAAoBS,QAApB,EAA8BC,MAA9B,CAAvB;AACA,SAAOL,QAAQ,CAACE,IAAhB;AACD,CAPD;;AASA,MAAMO,UAAU,GAAG,OAAOL,QAAP,EAAiBM,EAAjB,KAAwB;AACzC,QAAMV,QAAQ,GAAG,MAAMN,KAAK,CAACiB,GAAN,CAAW,GAAEhB,OAAQ,IAAGe,EAAG,EAA3B,EAA8BN,QAA9B,CAAvB;AACA,SAAOJ,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMU,YAAY,GAAG,MAAOC,MAAP,IAAkB;AACrC,QAAMb,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAvB;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAYf,QAAQ,CAACE,IAAT,CAAc,EAAd,EAAkBc,IAAlB,CAAuBN,EAAnC,EAAuCG,MAAvC,EAFqC,CAGrC;;AAEA,QAAMI,IAAI,GAAGjB,QAAQ,CAACE,IAAT,CAAcgB,GAAd,CAAmBC,IAAD,IAAU;AACvCL,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACD,GAFY,CAAb;AAIA;AACD,CAVD,C,CAYA;;;AACA,eAAe;AAAEpB,EAAAA,MAAF;AAAUI,EAAAA,eAAV;AAA2BN,EAAAA,QAA3B;AAAqCY,EAAAA,UAArC;AAAiDG,EAAAA;AAAjD,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst createBlogEntry = async (blogPost) => {\n  const config = {\n    headers: { Authorization: token}\n  }\n\n  const response = await axios.post(baseUrl, blogPost, config)\n  return response.data\n}\n\nconst updateLike = async (blogPost, id) => {\n  const response = await axios.put(`${baseUrl}/${id}`, blogPost)\n  return response.data\n}\n\nconst getBlogsUser = async (userId) => {\n  const response = await axios.get(baseUrl)\n  console.log(response.data[16].user.id, userId)\n  // const userBlogPosts = response.data.filter(blog => blog.user.id === userId)\n  \n  const test = response.data.map((blog) => {\n    console.log(blog);\n  })\n\n  return \n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, createBlogEntry, setToken, updateLike, getBlogsUser }"]},"metadata":{},"sourceType":"module"}