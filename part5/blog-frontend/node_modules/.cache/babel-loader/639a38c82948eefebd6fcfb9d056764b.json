{"ast":null,"code":"var _jsxFileName = \"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom'; // SERVICES\n\nimport loginService from '../services/login';\nimport blogService from '../services/blogs'; // REDUCERS\n\nimport { setTheUser } from '../reducers/userReducer';\nimport { timedError } from '../reducers/errorReducer';\nimport ErrorMessage from './ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = useSelector(state => state.user);\n  useEffect(() => {\n    if (user) {\n      navigate('/');\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      dispatch(setTheUser(user));\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      dispatch(timedError('Wrong Credentials'));\n      setUsername('');\n      setPassword('');\n    }\n\n    navigate('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center h-96 font-mono \",\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mb-2\",\n          children: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: username,\n          name: \"Username\",\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setUsername(target.value);\n          },\n          className: \"w-60 h-7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mb-2\",\n          children: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"text\",\n          value: password,\n          name: \"Password\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setPassword(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}; // LoginForm.propTypes = {\n//   handleLogin: PropTypes.func.isRequired,\n//   username: PropTypes.string.isRequired,\n//   setUsername: PropTypes.func.isRequired,\n//   password: PropTypes.string.isRequired,\n//   setPassword: PropTypes.func.isRequired,\n// }\n\n\n_s(LoginForm, \"/DU20J4H+3dHpz9f1s8QuuIEjYU=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/components/LoginForm.js"],"names":["React","useState","useEffect","PropTypes","useDispatch","useSelector","useNavigate","loginService","blogService","setTheUser","timedError","ErrorMessage","LoginForm","username","setUsername","password","setPassword","dispatch","navigate","user","state","handleLogin","event","preventDefault","login","window","localStorage","setItem","JSON","stringify","setToken","token","exception","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\n// SERVICES\nimport loginService from '../services/login'\nimport blogService from '../services/blogs'\n\n// REDUCERS\nimport { setTheUser } from '../reducers/userReducer'\nimport { timedError } from '../reducers/errorReducer'\nimport ErrorMessage from './ErrorMessage'\n\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const user = useSelector(state => state.user)\n\n  useEffect(() => {\n    if (user) {\n      navigate('/')\n    }\n\n  }, [])\n    \n  \n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      dispatch(setTheUser(user))\n      setUsername('')\n      setPassword('')\n\n    } catch (exception) {\n      dispatch(timedError('Wrong Credentials'))\n      setUsername('')\n      setPassword('')\n    }\n    navigate('/')\n  }\n\n\n  return (\n    <div className='flex flex-col justify-center items-center h-96 font-mono '>\n      <ErrorMessage/>\n      <h2 className='text-4xl'>Login</h2>\n      <form onSubmit={handleLogin} className='flex flex-col'>\n        <div className='flex flex-col mb-6'>\n          <label className='mb-2'>username</label>\n          <input\n            id='username'\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n            className='w-60 h-7'\n          />\n        </div>\n        <div className='flex flex-col mb-6'>\n         <label className='mb-2'>password</label>\n          <input\n            id='password'\n            type=\"text\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\n// LoginForm.propTypes = {\n//   handleLogin: PropTypes.func.isRequired,\n//   username: PropTypes.string.isRequired,\n//   setUsername: PropTypes.func.isRequired,\n//   password: PropTypes.string.isRequired,\n//   setPassword: PropTypes.func.isRequired,\n// }\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}