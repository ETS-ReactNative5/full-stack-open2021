{"ast":null,"code":"var _jsxFileName = \"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport LoginForm from './components/LoginForm';\nimport ErrorMessage from './components/ErrorMessage';\nimport ValidMessage from './components/ValidMessage';\nimport CreateForm from './components/CreateForm';\nimport loginService from './services/login';\nimport blogService from './services/blogs';\nimport './index.css';\nimport BlogList from './components/BlogList';\nimport Togglable from './components/Togglable'; // Redux implementation\n\nimport { useDispatch } from 'react-redux';\nimport { addBlog, initializeBlogs } from './reducers/blogsReducer';\nimport { timedError } from './reducers/errorReducer';\nimport { timedValid } from './reducers/validReducer';\nimport { setTheUser } from './reducers/validReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const blogFormRef = useRef();\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n    }\n  }, []);\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      console.log(user);\n      blogService.setToken(user.token);\n      dispatch(setTheUser(user));\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      dispatch(timedError('Wrong Credentials'));\n      setUsername('');\n      setPassword('');\n    } // add a dispatch to clear the state\n\n  };\n\n  const clearLocStor = event => {\n    event.preventDefault();\n    window.localStorage.clear();\n    setUser(null);\n  };\n\n  const createBlog = async blogObject => {\n    const response = await blogService.createBlogEntry(blogObject);\n    dispatch(addBlog(response));\n    dispatch(timedValid(`A new blog ${blogObject.title} ${blogObject.author} added`));\n    dispatch(initializeBlogs());\n    blogFormRef.current.toggleVisibility();\n  };\n\n  const updateBlogLikes = async (blogPost, id) => {\n    await blogService.updateLike(blogPost, id);\n    dispatch(initializeBlogs());\n  };\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    });\n    dispatch(initializeBlogs());\n    dispatch(timedValid('The blog entry has been deleted'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      handleLogin: handleLogin,\n      username: username,\n      setUsername: setUsername,\n      password: password,\n      setPassword: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ValidMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.name, \" logged in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearLocStor,\n          children: \"log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"Create new blog\",\n        ref: blogFormRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"create new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CreateForm, {\n          createBlog: createBlog,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BlogList, {\n        updateLike: updateBlogLikes,\n        user: user,\n        deleteBlogPost: deleteBlogPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"YxvJWqJ4nN/dXQ+1VhMwunY4kf8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/App.js"],"names":["useState","useEffect","useRef","LoginForm","ErrorMessage","ValidMessage","CreateForm","loginService","blogService","BlogList","Togglable","useDispatch","addBlog","initializeBlogs","timedError","timedValid","setTheUser","App","dispatch","username","setUsername","password","setPassword","user","setUser","blogFormRef","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","login","setItem","stringify","console","log","setToken","token","exception","clearLocStor","clear","createBlog","blogObject","response","createBlogEntry","title","author","current","toggleVisibility","updateBlogLikes","blogPost","id","updateLike","deleteBlogPost","deleteBlog","name"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react'\nimport LoginForm from './components/LoginForm'\nimport ErrorMessage from './components/ErrorMessage'\nimport ValidMessage from './components/ValidMessage'\nimport CreateForm from './components/CreateForm'\nimport loginService from './services/login'\n\nimport blogService from './services/blogs'\nimport './index.css'\nimport BlogList from './components/BlogList'\nimport Togglable from './components/Togglable'\n\n// Redux implementation\nimport { useDispatch } from 'react-redux'\nimport { addBlog, initializeBlogs } from './reducers/blogsReducer'\nimport { timedError } from './reducers/errorReducer'\nimport { timedValid } from './reducers/validReducer'\nimport { setTheUser } from './reducers/validReducer'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const blogFormRef = useRef()\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    }\n  }, [])\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      console.log(user);\n      blogService.setToken(user.token)\n      dispatch(setTheUser(user))\n      setUsername('')\n      setPassword('')\n\n    } catch (exception) {\n      dispatch(timedError('Wrong Credentials'))\n      setUsername('')\n      setPassword('')\n    }\n    // add a dispatch to clear the state\n  }\n\n  const clearLocStor = (event) => {\n    event.preventDefault()\n    window.localStorage.clear()\n    setUser(null)\n  }\n\n  const createBlog = async (blogObject) => {\n    const response = await blogService.createBlogEntry(blogObject)\n    dispatch(addBlog(response))\n    dispatch(timedValid(`A new blog ${blogObject.title} ${blogObject.author} added`))\n    dispatch(initializeBlogs())\n    blogFormRef.current.toggleVisibility()\n  }\n\n  const updateBlogLikes = async (blogPost, id) => {\n    await blogService.updateLike(blogPost, id)\n    dispatch(initializeBlogs())\n  }\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    })\n    dispatch(initializeBlogs())\n    dispatch(timedValid('The blog entry has been deleted'))\n  }\n\n  return (\n    <div>\n      <ErrorMessage/>\n      {user === null\n        ? <LoginForm\n          handleLogin={handleLogin}\n          username={username}\n          setUsername={setUsername}\n          password={password}\n          setPassword={setPassword}\n        />\n        : <div>\n          <ValidMessage/>\n          <div>\n            <p>{user.name} logged in</p>\n            <button onClick={clearLocStor}>log out</button>\n          </div>\n          <Togglable buttonLabel='Create new blog' ref={blogFormRef}>\n            <h2>create new</h2>\n            <CreateForm createBlog={createBlog} user={user}/>\n          </Togglable>\n          <h2>blogs</h2>\n          <BlogList updateLike={updateBlogLikes} user={user} deleteBlogPost={deleteBlogPost}/>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}