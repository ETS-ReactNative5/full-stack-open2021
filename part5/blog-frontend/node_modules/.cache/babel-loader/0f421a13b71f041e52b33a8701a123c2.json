{"ast":null,"code":"var _jsxFileName = \"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/components/BlogList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Blog from './Blog';\nimport jwt_decode from 'jwt-decode';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlogList = _ref => {\n  _s();\n\n  let {\n    updateLike,\n    user,\n    deleteBlogPost\n  } = _ref;\n  const blogs = useSelector(state => state.blogs);\n  console.log(blogs);\n\n  const compare = (a, b) => {\n    if (a.likes < b.likes) {\n      return 1;\n    }\n\n    if (a.likes > b.likes) {\n      return -1;\n    }\n\n    return 0;\n  };\n\n  const sortedBlogs = blogs.sort(compare);\n  const token_decoded = jwt_decode(user.token); // const userBlogs = sortedBlogs.map((blog) => {\n  //   if (blog.user) {\n  //     if (blog.user.id === token_decoded.id) {\n  //       return blog\n  //   }\n  //   return null\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: blogs.map(blog => blog !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        updateLike: updateLike,\n        user: user,\n        deleteBlogPost: deleteBlogPost\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this) : '')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlogList, \"TYHoK6W09eeJLXd0RuJrXxTEBOw=\", false, function () {\n  return [useSelector];\n});\n\n_c = BlogList;\nexport default BlogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"sources":["/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/components/BlogList.js"],"names":["React","Blog","jwt_decode","useSelector","BlogList","updateLike","user","deleteBlogPost","blogs","state","console","log","compare","a","b","likes","sortedBlogs","sort","token_decoded","token","map","blog","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,QAAQ,GAAG,QAA2C;AAAA;;AAAA,MAA1C;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA;AAApB,GAA0C;AAC1D,QAAMC,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,QAAMI,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,QAAID,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB;AACrB,aAAO,CAAP;AACD;;AACD,QAAIF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB;AACrB,aAAO,CAAC,CAAR;AACD;;AACD,WAAO,CAAP;AACD,GARD;;AASA,QAAMC,WAAW,GAAGR,KAAK,CAACS,IAAN,CAAWL,OAAX,CAApB;AACA,QAAMM,aAAa,GAAGhB,UAAU,CAACI,IAAI,CAACa,KAAN,CAAhC,CAd0D,CAgB1D;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE;AAAA,cACGX,KAAK,CAACY,GAAN,CAAUC,IAAI,IACbA,IAAI,KAAK,IAAT,gBACI;AAAA,6BACA,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAgC,QAAA,UAAU,EAAEhB,UAA5C;AAAwD,QAAA,IAAI,EAAEC,IAA9D;AAAoE,QAAA,cAAc,EAAEC;AAApF,SAAWc,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AADA,OAAUD,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,YADJ,GAII,EALL;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlCD;;GAAMlB,Q;UACUD,W;;;KADVC,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport Blog from './Blog'\nimport jwt_decode from 'jwt-decode'\nimport { useSelector } from 'react-redux'\n\nconst BlogList = ({ updateLike, user, deleteBlogPost, }) => {\n  const blogs = useSelector(state => state.blogs)\n  console.log(blogs)\n\n  const compare = (a, b) => {\n    if (a.likes < b.likes) {\n      return 1\n    }\n    if (a.likes > b.likes) {\n      return -1\n    }\n    return 0\n  }\n  const sortedBlogs = blogs.sort(compare)\n  const token_decoded = jwt_decode(user.token)\n\n  // const userBlogs = sortedBlogs.map((blog) => {\n  //   if (blog.user) {\n  //     if (blog.user.id === token_decoded.id) {\n  //       return blog\n  //   }\n  //   return null\n  // })\n  return (\n    <div>\n      {blogs.map(blog => (\n        blog !== null\n          ? <div key={blog.id}>\n            <Blog key={blog.id} blog={blog} updateLike={updateLike} user={user} deleteBlogPost={deleteBlogPost}/>\n          </div>\n          : ''\n      ))}\n    </div>\n  )\n}\n\nexport default BlogList"]},"metadata":{},"sourceType":"module"}