{"ast":null,"code":"var _jsxFileName = \"/Users/federico/Documents/Education/Full Stack Open/full-stack-open2021/part5/blog-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport LoginForm from './components/LoginForm';\nimport ErrorMessage from './components/ErrorMessage';\nimport ValidMessage from './components/ValidMessage';\nimport CreateForm from './components/CreateForm';\nimport loginService from './services/login';\nimport usersService from './services/users';\nimport blogService from './services/blogs';\nimport './index.css';\nimport BlogList from './components/BlogList';\nimport jwt_decode from 'jwt-decode';\nimport Togglable from './components/Togglable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [validMessage, setValidMessage] = useState(null);\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [users, setUsers] = useState(null);\n  const blogFormRef = useRef();\n  useEffect(() => {\n    usersService.getAllUsers().then(users => setUsers(users));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n    }\n  }, []);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }); // const findUserBlogs = (user) => {\n  //   const token_decoded = jwt_decode(user.token)\n  //   const userLog = users.filter(u => u.id === token_decoded.id)\n  //   return userLog[0].blogs\n  // }\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n      setBlogs(findUserBlogs(user));\n    } catch (exception) {\n      setErrorMessage('Wrong Credentials');\n      setUsername('');\n      setPassword('');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const clearLocStor = event => {\n    event.preventDefault();\n    window.localStorage.clear();\n    setUser(null);\n  };\n\n  const createBlog = async blogObject => {\n    const response = await blogService.createBlogEntry(blogObject);\n    setBlogs(blogs.concat(response));\n    setValidMessage(`A new blog ${blogObject.title} ${blogObject.author} added`);\n    blogFormRef.current.toggleVisibility();\n    setTimeout(() => {\n      setValidMessage(null);\n    }, 5000);\n  };\n\n  const updateBlogLikes = async (blogPost, id) => {\n    await blogService.updateLike(blogPost, id);\n  };\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    });\n    setValidMessage(`The blog entry has been deleted`);\n    setTimeout(() => {\n      setValidMessage(null);\n    }, 5000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      handleLogin: handleLogin,\n      username: username,\n      setUsername: setUsername,\n      password: password,\n      setPassword: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ValidMessage, {\n        message: validMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.name, \" logged in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearLocStor,\n          children: \"log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"Create new blog\",\n        ref: blogFormRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"create new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CreateForm, {\n          createBlog: createBlog,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(BlogList, {\n        blogs: blogs,\n        updateLike: updateBlogLikes,\n        user: user,\n        deleteBlogPost: deleteBlogPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"LSw9v2gBaiFdqfpi+cvRwOFaN6Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/federico/Documents/Education/Full Stack Open/full-stack-open2021/part5/blog-frontend/src/App.js"],"names":["useState","useEffect","useRef","LoginForm","ErrorMessage","ValidMessage","CreateForm","loginService","usersService","blogService","BlogList","jwt_decode","Togglable","App","errorMessage","setErrorMessage","validMessage","setValidMessage","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","users","setUsers","blogFormRef","getAllUsers","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","getAll","handleLogin","event","preventDefault","login","setItem","stringify","setToken","token","findUserBlogs","exception","setTimeout","clearLocStor","clear","createBlog","blogObject","response","createBlogEntry","concat","title","author","current","toggleVisibility","updateBlogLikes","blogPost","id","updateLike","deleteBlogPost","deleteBlog","name"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react'\nimport LoginForm from './components/LoginForm'\nimport ErrorMessage from './components/ErrorMessage'\nimport ValidMessage from './components/ValidMessage'\nimport CreateForm from './components/CreateForm'\nimport loginService from './services/login'\nimport usersService from './services/users'\nimport blogService from './services/blogs'\nimport './index.css'\nimport BlogList from './components/BlogList'\nimport jwt_decode from 'jwt-decode'\nimport Togglable from './components/Togglable'\n\nconst App = () => {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [validMessage, setValidMessage] = useState(null)\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [users, setUsers] = useState(null)\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    usersService.getAllUsers().then(users => \n      setUsers( users )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    }\n  }, [])\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => \n      setBlogs(blogs)  \n    )\n  })\n\n  // const findUserBlogs = (user) => {\n  //   const token_decoded = jwt_decode(user.token)\n  //   const userLog = users.filter(u => u.id === token_decoded.id)\n  //   return userLog[0].blogs\n  // }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      setBlogs(findUserBlogs(user))\n\n    } catch (exception) {\n      setErrorMessage('Wrong Credentials')\n      setUsername('')\n      setPassword('')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const clearLocStor = (event) => {\n    event.preventDefault()\n    window.localStorage.clear()\n    setUser(null)\n  } \n\n  const createBlog = async (blogObject) => {\n    const response = await blogService.createBlogEntry(blogObject)\n    setBlogs(blogs.concat(response))\n    setValidMessage(`A new blog ${blogObject.title} ${blogObject.author} added`)\n    blogFormRef.current.toggleVisibility()\n    setTimeout(() => {\n      setValidMessage(null)\n    }, 5000)\n  }\n\n  const updateBlogLikes = async (blogPost, id) => {\n    await blogService.updateLike(blogPost, id)\n  }\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    })\n    setValidMessage(`The blog entry has been deleted`)\n    setTimeout(() => {\n      setValidMessage(null)\n    }, 5000)\n  }\n\n  return (\n    <div>\n      <ErrorMessage message={errorMessage}/>\n      {user === null\n      ? <LoginForm \n        handleLogin={handleLogin}\n        username={username}\n        setUsername={setUsername}\n        password={password}\n        setPassword={setPassword}\n      />\n      : <div>\n          <ValidMessage message={validMessage}/>\n          <div>\n            <p>{user.name} logged in</p>\n            <button onClick={clearLocStor}>log out</button>\n          </div>\n          <Togglable buttonLabel='Create new blog' ref={blogFormRef}>\n            <h2>create new</h2>\n            <CreateForm createBlog={createBlog} user={user}/>\n          </Togglable>\n              <h2>blogs</h2>\n              <BlogList blogs={blogs} updateLike={updateBlogLikes} user={user} deleteBlogPost={deleteBlogPost}/>      \n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}