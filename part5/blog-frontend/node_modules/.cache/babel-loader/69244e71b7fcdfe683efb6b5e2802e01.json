{"ast":null,"code":"var _jsxFileName = \"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport LoginForm from './components/LoginForm';\nimport ErrorMessage from './components/ErrorMessage';\nimport ValidMessage from './components/ValidMessage';\nimport CreateForm from './components/CreateForm';\nimport loginService from './services/login';\nimport blogService from './services/blogs';\nimport './index.css';\nimport BlogList from './components/BlogList';\nimport Togglable from './components/Togglable'; // Redux implementation\n\nimport { useDispatch } from 'react-redux';\nimport { initializeBlogs } from './reducers/blogsReducer';\nimport { setValid, timedError } from './reducers/notificationReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [validMessage, setValidMessage] = useState(null);\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const blogFormRef = useRef();\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n    }\n  }, []);\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      dispatch(timedError('Wrong Credentials'));\n      setUsername('');\n      setPassword('');\n    }\n  };\n\n  const clearLocStor = event => {\n    event.preventDefault();\n    window.localStorage.clear();\n    setUser(null);\n  };\n\n  const createBlog = async blogObject => {\n    const response = await blogService.createBlogEntry(blogObject);\n    setBlogs(blogs.concat(response));\n    dispatch(setValid(`A new blog ${blogObject.title} ${blogObject.author} added`));\n    blogFormRef.current.toggleVisibility();\n  };\n\n  const updateBlogLikes = async (blogPost, id) => {\n    await blogService.updateLike(blogPost, id);\n  };\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    });\n    dispatch(setValid('The blog entry has been deleted'));\n    setTimeout(() => {\n      setValidMessage(null);\n    }, 5000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      handleLogin: handleLogin,\n      username: username,\n      setUsername: setUsername,\n      password: password,\n      setPassword: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ValidMessage, {\n        message: validMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.name, \" logged in\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearLocStor,\n          children: \"log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"Create new blog\",\n        ref: blogFormRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"create new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CreateForm, {\n          createBlog: createBlog,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BlogList, {\n        updateLike: updateBlogLikes,\n        user: user,\n        deleteBlogPost: deleteBlogPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qXLsVASOsmfm633wSZTuNx+zY/o=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/App.js"],"names":["useState","useEffect","useRef","LoginForm","ErrorMessage","ValidMessage","CreateForm","loginService","blogService","BlogList","Togglable","useDispatch","initializeBlogs","setValid","timedError","App","dispatch","validMessage","setValidMessage","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","blogFormRef","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","login","setItem","stringify","setToken","token","exception","clearLocStor","clear","createBlog","blogObject","response","createBlogEntry","concat","title","author","current","toggleVisibility","updateBlogLikes","blogPost","id","updateLike","deleteBlogPost","deleteBlog","setTimeout","name"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react'\nimport LoginForm from './components/LoginForm'\nimport ErrorMessage from './components/ErrorMessage'\nimport ValidMessage from './components/ValidMessage'\nimport CreateForm from './components/CreateForm'\nimport loginService from './services/login'\n\nimport blogService from './services/blogs'\nimport './index.css'\nimport BlogList from './components/BlogList'\nimport Togglable from './components/Togglable'\n\n// Redux implementation\nimport { useDispatch } from 'react-redux'\nimport { initializeBlogs } from './reducers/blogsReducer'\nimport { setValid, timedError } from './reducers/notificationReducer'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  const [validMessage, setValidMessage] = useState(null)\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const blogFormRef = useRef()\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    }\n  }, [])\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n\n    } catch (exception) {\n      dispatch(timedError('Wrong Credentials'))\n      setUsername('')\n      setPassword('')\n    }\n  }\n\n  const clearLocStor = (event) => {\n    event.preventDefault()\n    window.localStorage.clear()\n    setUser(null)\n  }\n\n  const createBlog = async (blogObject) => {\n    const response = await blogService.createBlogEntry(blogObject)\n    setBlogs(blogs.concat(response))\n    dispatch(setValid(`A new blog ${blogObject.title} ${blogObject.author} added`))\n    blogFormRef.current.toggleVisibility()\n\n  }\n\n  const updateBlogLikes = async (blogPost, id) => {\n    await blogService.updateLike(blogPost, id)\n  }\n\n  const deleteBlogPost = async (id, user) => {\n    await blogService.deleteBlog({\n      id: id,\n      user: user\n    })\n    dispatch(setValid('The blog entry has been deleted'))\n    setTimeout(() => {\n      setValidMessage(null)\n    }, 5000)\n  }\n\n  return (\n    <div>\n      <ErrorMessage/>\n      {user === null\n        ? <LoginForm\n          handleLogin={handleLogin}\n          username={username}\n          setUsername={setUsername}\n          password={password}\n          setPassword={setPassword}\n        />\n        : <div>\n          <ValidMessage message={validMessage}/>\n          <div>\n            <p>{user.name} logged in</p>\n            <button onClick={clearLocStor}>log out</button>\n          </div>\n          <Togglable buttonLabel='Create new blog' ref={blogFormRef}>\n            <h2>create new</h2>\n            <CreateForm createBlog={createBlog} user={user}/>\n          </Togglable>\n          <h2>blogs</h2>\n          <BlogList updateLike={updateBlogLikes} user={user} deleteBlogPost={deleteBlogPost}/>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}