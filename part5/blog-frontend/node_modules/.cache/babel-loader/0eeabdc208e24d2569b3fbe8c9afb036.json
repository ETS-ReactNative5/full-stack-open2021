{"ast":null,"code":"var _jsxFileName = \"/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/components/Togglable.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, forwardRef, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Togglable = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  const hideWhenVisible = {\n    display: visible ? 'none' : ''\n  };\n  const showWhenVisible = {\n    display: visible ? '' : 'none'\n  };\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: hideWhenVisible,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        className: \"font-mono p-2 mb-6 w-40 rounded-md border-solid border-blue-400/30 hover:border-blue-400 hover:shadow-md hover:transition-all dark:text-white dark:bg-slate-900\",\n        children: props.buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: showWhenVisible,\n      children: [props.children, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        className: \"font-mono p-2 w-32 rounded-md border-solid border-blue-400/30 hover:border-blue-400 hover:shadow-md hover:transition-all dark:text-white dark:bg-slate-900\",\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}, \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\")), \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\");\n\n_c2 = Togglable;\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\nTogglable.displayName = 'Togglable';\nexport default Togglable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Togglable$forwardRef\");\n$RefreshReg$(_c2, \"Togglable\");","map":{"version":3,"sources":["/Users/federico/CS Projects/full-stack-open2021/part5/blog-frontend/src/components/Togglable.js"],"names":["React","useState","forwardRef","useImperativeHandle","PropTypes","Togglable","props","ref","visible","setVisible","toggleVisibility","hideWhenVisible","display","showWhenVisible","buttonLabel","children","propTypes","string","isRequired","displayName"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,mBAAtC,QAAiE,OAAjE;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,SAAS,iCAAGH,UAAU,SAAC,CAACI,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAC3C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMS,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAGA,QAAMG,eAAe,GAAG;AAAEC,IAAAA,OAAO,EAAEJ,OAAO,GAAG,MAAH,GAAY;AAA9B,GAAxB;AACA,QAAMK,eAAe,GAAG;AACtBD,IAAAA,OAAO,EAAEJ,OAAO,GAAG,EAAH,GAAQ;AADF,GAAxB;AAIAL,EAAAA,mBAAmB,CAACI,GAAD,EAAM,MAAM;AAC7B,WAAO;AACLG,MAAAA;AADK,KAAP;AAGD,GAJkB,CAAnB;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,KAAK,EAAEC,eAAZ;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAED,gBAAjB;AAAmC,QAAA,SAAS,EAAC,iKAA7C;AAAA,kBAAgNJ,KAAK,CAACQ;AAAtN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,KAAK,EAAED,eAAZ;AAAA,iBACGP,KAAK,CAACS,QADT,eAEE;AAAQ,QAAA,OAAO,EAAEL,gBAAjB;AAAmC,QAAA,SAAS,EAAC,4JAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA5B2B,kCAAb,iCAAf;;MAAML,S;AA8BNA,SAAS,CAACW,SAAV,GAAsB;AACpBF,EAAAA,WAAW,EAAEV,SAAS,CAACa,MAAV,CAAiBC;AADV,CAAtB;AAIAb,SAAS,CAACc,WAAV,GAAwB,WAAxB;AAEA,eAAed,SAAf","sourcesContent":["import { React, useState, forwardRef, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = {\n    display: visible ? '' : 'none'\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div className='flex'>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility} className='font-mono p-2 mb-6 w-40 rounded-md border-solid border-blue-400/30 hover:border-blue-400 hover:shadow-md hover:transition-all dark:text-white dark:bg-slate-900'>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility} className='font-mono p-2 w-32 rounded-md border-solid border-blue-400/30 hover:border-blue-400 hover:shadow-md hover:transition-all dark:text-white dark:bg-slate-900'>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable"]},"metadata":{},"sourceType":"module"}